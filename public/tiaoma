<!DOCTYPE html> 
 <html> 
 
 
 <head> 
     <title>跳马</title> 
     <style type="text/css"> 
         #result{ 
             table-layout:fixed; 
             word-break: break-all;  
             word-wrap: break-word;  
         } 
     </style> 
 </head> 
 
 
 
 <body> 
     <table border="1" WIDTH=500px HEIGHT=120px align="center" name="Table"> 
         <tr >
             <td>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
                 跳马问题计算
             </td> 
         </tr>
         <tr> 
             <td>
                 棋盘行数m &nbsp &nbsp
                 <input type="number" min="1" max="100" id="chessboardM" value="0"> 
             </td> 
             <td> 
                 棋盘列数n &nbsp &nbsp
                 <input type="number" min="1" max="100" id="chessboardN" value="0">
             </td>
        </tr>
        <tr> 
             <td> 
                 马初始位置x坐标 &nbsp
                 <input type="number" min="1" max='100' id="originX" value="0"> 
             </td> 
             <td> 
                 马初始位置y坐标 &nbsp
                 <input type="number" min="1" max="100" id="originY" value="0">
             </td> 
         </tr> 
     </table> 
     <table border="1" WIDTH=500px HEIGHT=120px align="center"> 
        <tr> 
            <td> 
                <input type="button" id="calculate" onclick="getResult()" value="计算路径"> 
            </br>
                 最终结果为：<br> 
                 <p id="result" width=400px> 
                 </p>                 
             </td> 
         </tr> 
     </table> 
     <script type="text/javascript"> 

 //初始化变量 
 //一共有8个方向 
 var dxy = new Array; 
 dxy = [[1, 2], [2, 1], [2, -1], [1, -2], [-1, -2], [-2, -1], [-2, 1], [-1, 2]]; 
 var trace = new Array; 
 var Num = 1; //步数
 var Road = new Array;//所有路线 
 var count = 0; //路线个数
 var initX; 
 var initY; 
 var m; 
 var n; 
 var current = new Array(); 

    //初始化变量
    function getResult() { 
    Road.splice(0,Road.length); 
    count=0; 
    m = parseInt(document.getElementById("chessboardM").value); 
    n = parseInt(document.getElementById("chessboardN").value); 
    initX = parseInt(document.getElementById("originX").value); 
    initY = parseInt(document.getElementById("originY").value); 
       
    //初始化棋盘上所有位置
    var finalRoad = new Array; 
    for (var i = 0; i < m; i++) { 
        current[i] = new Array(); 
        for (var j = 0; j < n; j++) { 
           current[i][j] = 0; 
         } 
     } 
    finalRoad = findRoad() 
    document.getElementById("result").innerHTML = "一共有 " + count + "条" + "<br>"; 
    for (var i = 0; i < count; i++) { 
        for (var j = 1; j < finalRoad[i].length; j++) { 
            if (j == finalRoad[i].length - 1) { 
                 document.getElementById("result").innerHTML += finalRoad[i][j]+"<br>"; 
             } else { 
                 document.getElementById("result").innerHTML += finalRoad[i][j] + "->"; 
             }  
         }   
     }      
 }   
 //判断下一步能不能跳 
 function trueDiret(x, y, i) { 
     //未超过边界 
     if ((x + dxy[i][0]) < m && (x + dxy[i][0]) >= 0 && y + dxy[i][1] < n && y + dxy[i][1] >= 0) { 
         //下一步未走过或者抵达起点 
         var tempx = 0; 
         var tempy = 0; 
         tempx = x + dxy[i][0]; 
         tempy = y + dxy[i][1]; 
         if (current[tempx][tempy] == 0 || (x + dxy[i][0] == initX && y + dxy[i][1] == initY)) { 
             return true; 
         } 
         return false; 
     } 
     return false; 
 } 
 //判断是否到达边界 
 function receiveEdge() { 
     for (var i = 0; i < m; i++) { 
         if (current[i][0] != 0 || current[i][n - 1] != 0) { 
             return true; 
         } 
     } 
     for (var i = 0; i < n; i++) { 
         if (current[0][i] != 0 || current[m - 1][i] != 0) { 
             return true; 
         } 
     } 
     return false; 
 } 
 //找路线 并返回。 
 function findRoad() { 
     Iteration(initX, initY, Num); 
     return Road; 
 } 
 //递归遍历 
 function Iteration(x, y, t) { 
  
     if (x == initX && y == initY && t != 1) { 
         //判断是否到达过边界 
         if (receiveEdge()) { 
             var tempTrace = new Array(); 
             count++; 
             for (var i = 1; i < Num; i++) { 
                 var tempx = trace[i][0]; 
                 var tempy = trace[i][1]; 
                 tempTrace[i] = new Array(); 
                 tempTrace[i][0] = tempx; 
                 tempTrace[i][1] = tempy; 
             } 
             //加上最后一个点 
             tempTrace[Num] = new Array(); 
             tempTrace[Num][0] = initX; 
             tempTrace[Num][1] = initY; 
             Road.push(tempTrace); 
         } 
     } 
     else { 
         for (var i = 0; i < 8; i++) { 
             if (trueDiret(x, y, i)) { 
                 trace[Num] = new Array(); 
                 trace[Num][0] = x; 
                 trace[Num][1] = y; 
                 current[x][y] = Num; 
                 Num++; 
                 Iteration(x + dxy[i][0], y + dxy[i][1], Num); 
                 Num--; 
                 current[x][y] = 0; 
                 trace[Num][0] = 0; 
                 trace[Num][1] = 0; 
             } 
         } 
  
     } 
 } 
     </script> 
 </body> 
 
 
 </html> 
